name: CI - Build & SonarCloud

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest
    timeout-minutes: 90

    steps:
    # 1️⃣ Checkout code
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # 获取完整 git 历史，SonarCloud 需要

    # 2️⃣ Set up JDK 21
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: 21

    # 3️⃣ Cache Gradle dependencies
    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*','**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle

    # 4️⃣ Build APK first (skip F-Droid flavor)
    - name: Build APK
      run: ./gradlew assembleDebug -x assembleFdroidDebug --no-daemon --stacktrace
      env:
        GRADLE_OPTS: "-Xmx6g"

    # 5️⃣ Run tests & generate Jacoco coverage (skip ktfmt)
    - name: Run tests & generate coverage
      run: ./gradlew test jacocoTestReport -x ktfmtCheckMain --no-daemon --stacktrace
      env:
        GRADLE_OPTS: "-Xmx6g"

    # 6️⃣ Upload JaCoCo coverage report
    - name: Upload JaCoCo coverage report
      uses: actions/upload-artifact@v4
      with:
        name: jacoco-report
        path: app/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml

    # 7️⃣ Run SonarCloud analysis
    - name: Run SonarCloud analysis
      uses: sonarsource/sonarcloud-github-action@v2
      with:
        args: >
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
          -Dsonar.projectKey=chen-k-a-f_Seal_study
          -Dsonar.organization=your-org
          -Dsonar.sources=app/src/main/java,app/src/main/kotlin
          # 如果有测试目录可以取消注释
          # -Dsonar.tests=app/src/test/java
          -Dsonar.java.binaries=app/build/classes/java/main
          -Dsonar.projectBaseDir=.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
